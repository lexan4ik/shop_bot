from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton,ReplyKeyboardMarkup,KeyboardButton
from telebot.types import InputMediaPhoto
from other import message_id,bot,category,admins,states,cart,states_order,states,order,admin_chat
from main import BotDB,products
from functions_db import BotDB
import telebot
import json

BotDB = BotDB('User_DB.db')

#–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –∏–∑ –ê–¥–º–∏–Ω —á–∞—Ç–∞
def send_order(user_id,item):
    keyboard = InlineKeyboardMarkup()
    total_sum = 0
    for i in item['items']:
        for a, b in i.items():
            print(a,b)
            for k, j in b.items():
                pass
            total_sum += int(j['price']) * int(j['count'])
            keyboard.add(InlineKeyboardButton(
                text=f'{j["name"]}: {j["price"]}byn * {j["count"]}—à—Ç == {int(j["price"]) * int(j["count"])}byn',
                callback_data='faddf'))
            print(j)
        keyboard.add(InlineKeyboardButton(text=f"–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞: {total_sum} byn", callback_data='suuum'))
        keyboard.add(InlineKeyboardButton(text=f"–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: {item['status']}", callback_data='status'))
        keyboard.add(InlineKeyboardButton(text=f"–û–±—Ä–∞–±–æ—Ç–∫–∞",callback_data=f'order000{item}'),InlineKeyboardButton('–ó–∞–≤–µ—Ä—à–µ–Ω',callback_data=f'order001{item}'))
    bot.send_message(admin_chat, f'–ü—Ä–∏—à–µ–ª –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_id}!' ,reply_markup=keyboard)


#–í—ã–¥–∞—á–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –º–µ–Ω—é
def menu_keyb():
    menu_keyboard = ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=True)
    product = KeyboardButton('–¢–æ–≤–∞—Ä—ã')
    cart = KeyboardButton('–ö–æ—Ä–∑–∏–Ω–∞')
    order = KeyboardButton('–ó–∞–∫–∞–∑—ã')
    me_help = KeyboardButton('–ü–æ–º–æ—â—å')
    menu_keyboard.row(product,cart)
    menu_keyboard.row(order,me_help)
    return menu_keyboard

#–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def new_admin(message):
    if message.chat.id in admins and admins[message.chat.id]['rights'] is True:
        print(message)
        try:
            admin_keyb = InlineKeyboardMarkup()
            forward_id = message.forward_from.id
            admins[forward_id] = {}
            admin_keyb.add(InlineKeyboardButton('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', callback_data=f'addadmin{forward_id}'),
                           InlineKeyboardButton('–ü—Ä–æ–¥–∞–≤–µ—Ü', callback_data=f'addseler{forward_id}'))
            bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –ø—Ä–∞–≤", reply_markup=admin_keyb)
        except:
            bot.send_message(message.chat.id,'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!')

#–ü–∞–Ω–µ–ª—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def admin_panel():
    admin_keyboard = InlineKeyboardMarkup()
    admin_keyboard.add(InlineKeyboardButton('–°–ø–∏—Å–æ–∫ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤',callback_data='listadm0'))
    admin_keyboard.add(InlineKeyboardButton('–°–ø–∏—Å–æ–∫ –ü—Ä–æ–¥–∞–≤—Ü–æ–≤',callback_data='listsell'))
    admin_keyboard.add(InlineKeyboardButton('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',callback_data='statprod'))
    admin_keyboard.add(InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä',callback_data='add_prod'))
    admin_keyboard.add(InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',callback_data='newadmin'))
    return admin_keyboard

def check_admins(flag=''):
    admin_keyb = InlineKeyboardMarkup()
    for a,b in admins.items():
        if b['rights'] is True and flag == 'admin':
                admin_keyb.add(InlineKeyboardButton(f'–ê–¥–º–∏–Ω {a}',callback_data=f'adm_list{a}'))
        if b['rights'] is False and flag == 'seller':
                admin_keyb.add(InlineKeyboardButton(f'–ü—Ä–æ–¥–∞–≤–µ—Ü {a}',callback_data=f'sel_list{a}'))
    return admin_keyb

#–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –ø—Ä–∞–≤–∞ –∏ –≤—ã–¥–∞—á–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –º–µ–Ω—é
def check_user(user_id):
    if user_id not in admins:
        bot.send_message(user_id,'–í—ã –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!')
    elif admins[user_id]['rights'] is True:
        bot.send_message(user_id,'–í—ã –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!',reply_markup=admin_panel())
    elif admins[user_id]['rights'] is False:
        bot.send_message(user_id,'–í—ã –ü—Ä–æ–¥–∞–≤–µ—Ü!')

#–î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞
def create_product(message,prod_id):
    global products
    for a,b in products[prod_id][message.chat.id].items():
        if not b or states[message.chat.id][a] is not False:
            states[message.chat.id][a] = True
            break

#–î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞
def confirm_order(message,order_id):
    for a,b in order[int(order_id)][message.chat.id].items():
        print(a)
        if not b or states_order[message.chat.id][a] is not False:
            states_order[message.chat.id][a] = True
            break
#–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ —Å–ø–∏—Å–∫—É –ø—Ä–æ–¥—É–∫—Ç–æ–≤
def category_list():
    category_keyboard = InlineKeyboardMarkup()
    for i in category:
        category_keyboard.add(InlineKeyboardButton(i,callback_data='products'+i))
    category_keyboard.add(InlineKeyboardButton('–í –º–µ–Ω—é', callback_data='menu'))
    return category_keyboard

#–í—ã–¥–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏—Å—Ö–æ–¥—è –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
def category_search(user_id,category):
    for a,b in products.items():
        for k,j in b.items():
            if category.lower() in j['category'].lower():
                text = f"{j['name']}({a})\n\n{j['price']} byn\n\n{j['desc']}"
                photo = j['photo']
                add_cart(user_id, text, photo,a)
#–ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É" –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –∏ –¥–∞–ª—å—à–µ–π—à–µ–π –≤—ã–¥–∏—á–∏ –∫–Ω–æ–ø–æ–∫ –∫–æ–ª-–≤–∞
def add_cart(user_id,text,photo,result_id):
    cart_add = InlineKeyboardMarkup()
    cart_add.add(InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É', callback_data=f'add_cart{result_id}'))
    msg = bot.send_photo(user_id, photo, caption=text, reply_markup=cart_add)
    message_id[user_id][result_id] = msg.id

#–ö–ª–∞–≤–∏—Ç—É—Ä–∞ –∫–æ–ª-–≤–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É
def add_count_cart(user_id,result_id):
    add_count = InlineKeyboardMarkup()
    from_id = products[result_id].keys()
    from_id = list(from_id)[0]
    count = cart[user_id][result_id][from_id]['count']
    add_count.add(InlineKeyboardButton('üîΩ', callback_data=f'mincount{int(result_id)}'),
                  InlineKeyboardButton(count, callback_data=f'sumcount{int(result_id)}'),
                  InlineKeyboardButton('üîº', callback_data=f'addcount{int(result_id)}'))
    bot.edit_message_reply_markup(user_id, message_id[user_id][result_id], reply_markup=add_count)

#–í—ã–¥–∞—á–∞ –∫–æ—Ä–∑–∏–Ω—ã
def carts_keyb(user_id):
    keyboard = InlineKeyboardMarkup()
    total_sum = 0
    for a,b in cart[user_id].items():
        for k,j in b.items():
            total_sum += int(j['price']) * int(j['count'])
            keyboard.add(InlineKeyboardButton(text=f'{j["name"]}: {j["price"]}byn * {j["count"]}—à—Ç == {int(j["price"]) * int(j["count"])}byn',
                                              callback_data=f'addcount{int(a)}'))
            keyboard.add(InlineKeyboardButton(text='üîΩ', callback_data=f'mincount{int(a)}'),
                         InlineKeyboardButton(text='üîº', callback_data=f'addcount{int(a)}'),
                         InlineKeyboardButton(text='‚ùå', callback_data=f'deltprod{int(a)}'))
    keyboard.add(InlineKeyboardButton(text=f"–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞: {int(total_sum)} byn",callback_data='suuum'))
    keyboard.add(InlineKeyboardButton(text=f'–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑?',callback_data='addorder'))
    keyboard.add(InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data=f'menu'))
    return keyboard

#–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ —Ç–æ–≤–∞—Ä–∞
def dilivery():
    dilivery_keyb = InlineKeyboardMarkup()
    dilivery_keyb.add(InlineKeyboardButton('–°–∞–º–æ–≤—ã–≤–æ–∑',callback_data='mepickup'),InlineKeyboardButton('–ü–æ—á—Ç–∞',callback_data='mailpick'))
    return dilivery_keyb

#–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤
def my_orders(user_id):
    for a,b in order.items():
        for k,j in b.items():
            pass
        if int(user_id)== int(k):
            status = j['status']
            bot.send_message(user_id, '–í–∞—à–∏ –∑–∞–∫–∞–∑—ã:', reply_markup=show_order(j['items'], status))
        else:
            pass
#–í—ã–¥–∞—á–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
def show_order(item,status):
    keyboard = InlineKeyboardMarkup()
    total_sum = 0
    print(item)
    for i in item:
        for a,b in i.items():
            for k,j in b.items():
                pass
            total_sum += int(j['price']) * int(j['count'])
            keyboard.add(InlineKeyboardButton(
                text=f'{j["name"]}: {j["price"]}byn * {j["count"]}—à—Ç == {int(j["price"]) * int(j["count"])}byn',callback_data='faddf'))
            print(j)
        keyboard.add(InlineKeyboardButton(text=f"–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞: {total_sum} byn", callback_data='suuum'))
        keyboard.add(InlineKeyboardButton(text=f"–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: {status}",callback_data='status'))
        keyboard.add(InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data=f'menu'))
        return keyboard